library(lubridate)
library(corrplot)
library(ggplot2)
#1 - Comece por carregar o ficheiro (“ciclismo.csv”) para o ambiente do R,
# verifique a sua dimensão e obtenha um sumário dos dados.
#setwd("C:/Users/manu0/Desktop/RESTO/ANADI/TP2/data")
setwd("C:/Users/asus/Desktop/ANADI/iteracao_2/anadi_isep_23/TP2/data")
#1 - Comece por carregar o ficheiro (“ciclismo.csv”) para o ambiente do R,
# verifique a sua dimensão e obtenha um sumário dos dados.
setwd("C:/Users/manu0/Desktop/RESTO/ANADI/TP2/data")
#setwd("C:/Users/asus/Desktop/ANADI/iteracao_2/anadi_isep_23/TP2/data")
data <- read.csv("ciclismo.csv")
dimensions <- dim(data) #11 colunas e 1000 linhas
data_summary <- summary(data) #Possui variaveis categorias, númericas e binárias
View(data)
View(data)
#2 - Derive um novo atributo Age usando como valor do atributo dob
ages <- interval(as.Date(data$dob), today()) %/% years(1)
data$age <- ages
#3 - Analise os atributos do conjunto de dados mais significativos,
#usando gráficos, análises estatísticas e/ou outros métodos apropriados.
#Tranformando o atributo categorio binario Gender em binário númerico
# female - 0; male - 1
data$gender<- ifelse(data$gender == "female", 0, 1)
#Repetindo o mesmo processo para a variável Winter.Training.Camp
# completed - 1; none - 0
data$Winter.Training.Camp<- ifelse(data$Winter.Training.Camp == "none", 0, 1)
#Repetindo o mesmo processo para a variável Pro.level
# World Tour - 1; Continental - 0
data$Pro.level <- ifelse(data$Pro.level == "Continental", 0, 1)
#Transformando variáveis categoricas não binárias em numericas
unique_countries <- unique(data$Continent)
data$Continent <- match(data$Continent, unique_countries)
unique_teams <- unique(data$Team)
data$Team <- match(data$Team, unique_teams)
unique_backgrounds <- unique(data$Background)
data$Background <- match(data$Background, unique_backgrounds)
label_names <- c("Gender", "Team", "Background", "Level", "Winter Camp", "Altitude", "VO2", "HR", "Continent", "Age")
boxplot(data[,c(2:9,11,12)], names=label_names, col = c(1,2,3,4,5,6,7,8,10,11))
hist(data$age)
hist(data$age)
hist(data$hr_results)
hist(data$vo2_results)
hist(data$hr_results)
hist(data$vo2_results)
hist(data$gender)
barplot(data$gender)
contagem_generos <- table(data$gender)
# Criar o gráfico de barras
barplot(contagem_generos,
main = "Distribuição de Gêneros",
xlab = "Gênero",
ylab = "Contagem",
col = "lightblue")
library(lubridate)
library(corrplot)
library(ggplot2)
#1 - Comece por carregar o ficheiro (“ciclismo.csv”) para o ambiente do R,
# verifique a sua dimensão e obtenha um sumário dos dados.
setwd("C:/Users/manu0/Desktop/RESTO/ANADI/TP2/data")
#setwd("C:/Users/asus/Desktop/ANADI/iteracao_2/anadi_isep_23/TP2/data")
data <- read.csv("ciclismo.csv")
dimensions <- dim(data) #11 colunas e 1000 linhas
data_summary <- summary(data) #Possui variaveis categorias, númericas e binárias
#2 - Derive um novo atributo Age usando como valor do atributo dob
ages <- interval(as.Date(data$dob), today()) %/% years(1)
data$age <- ages
#3 - Analise os atributos do conjunto de dados mais significativos,
#usando gráficos, análises estatísticas e/ou outros métodos apropriados.
contagem_generos <- table(data$gender)
# Criar o gráfico de barras
barplot(contagem_generos,
main = "Distribuição de Gêneros",
xlab = "Gênero",
ylab = "Contagem",
col = "lightblue")
contagem_generos <- table(data$gender)
# Criar o gráfico de barras
barplot(contagem_generos,
main = "Gender Distribution",
xlab = "Gender",
col = "lightblue")
count_gender <- table(data$gender)
# Criar o gráfico de barras
barplot(count_gender,
main = "Gender Distribution",
xlab = "Gender",
col = "lightblue")
count_training_camp <- table(data$Winter.Training.Camp)
# Criar o gráfico de barras para ver a distribuição do genero
barplot(count_training_camp,
main = "Gender Distribution",
xlab = "Gender",
col = "lightblue")
count_training_camp <- table(data$Winter.Training.Camp)
# Criar o gráfico de barras para ver a distribuição do genero
barplot(count_training_camp,
main = "Winter Training Camp",
xlab = "Status",
col = "lightblue")
count_pro_level <- table(data$Pro.level)
# Criar o gráfico de barras para ver a distribuição do genero
barplot(count_pro_level,
main = "Pro Level",
xlab = "Status",
col = "lightblue")
count_pro_level <- table(data$Pro.level)
# Criar o gráfico de barras para ver a distribuição do genero
barplot(count_pro_level,
main = "Pro Level",
col = "lightblue")
count_training_camp <- table(data$Winter.Training.Camp)
# Criar o gráfico de barras para ver a distribuição do genero
barplot(count_training_camp,
main = "Winter Training Camp",
col = "lightblue")
count_countries <- table(data$Continent)
# Criar o gráfico de barras para ver a distribuição do genero
barplot(count_countries,
main = "Continets",
col = "lightblue")
count_teams <- table(data$Team)
# Criar o gráfico de barras para ver a distribuição do genero
barplot(count_teams,
main = "Teams",
col = "lightblue")
count_background <- table(data$Background)
# Criar o gráfico de barras para ver a distribuição do genero
barplot(count_background,
main = "Background",
col = "lightblue")
hist(data$age)
hist(data$hr_results)
hist(data$vo2_results)
hist(data$altitude_results)
hist(data$age, main = "Age Histogram", xlab = "Ages", ylab = "Frequency", col = "lightblue")
hist(data$hr_results, main = "Hr Results Histogram", xlab = "Hr Results", ylab = "Frequency", col = "lightblue")
hist(data$vo2_results,  main = "VO2 Results Histogram", xlab = "VO2 Results", ylab = "Frequency", col = "lightblue")
hist(data$altitude_results,  main = "Altitude Results Histogram", xlab = "Altitude Results", ylab = "Frequency", col = "lightblue")
hist(data$age, main = "Age Histogram", xlab = "Ages", ylab = "Frequency", col = "lightblue")
